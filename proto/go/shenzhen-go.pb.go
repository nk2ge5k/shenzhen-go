// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.26.1
// source: shenzhen-go.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionRequest_Action int32

const (
	ActionRequest_SAVE     ActionRequest_Action = 0
	ActionRequest_REVERT   ActionRequest_Action = 1
	ActionRequest_GENERATE ActionRequest_Action = 2
	ActionRequest_BUILD    ActionRequest_Action = 3
	ActionRequest_INSTALL  ActionRequest_Action = 4
)

// Enum value maps for ActionRequest_Action.
var (
	ActionRequest_Action_name = map[int32]string{
		0: "SAVE",
		1: "REVERT",
		2: "GENERATE",
		3: "BUILD",
		4: "INSTALL",
	}
	ActionRequest_Action_value = map[string]int32{
		"SAVE":     0,
		"REVERT":   1,
		"GENERATE": 2,
		"BUILD":    3,
		"INSTALL":  4,
	}
)

func (x ActionRequest_Action) Enum() *ActionRequest_Action {
	p := new(ActionRequest_Action)
	*p = x
	return p
}

func (x ActionRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_shenzhen_go_proto_enumTypes[0].Descriptor()
}

func (ActionRequest_Action) Type() protoreflect.EnumType {
	return &file_shenzhen_go_proto_enumTypes[0]
}

func (x ActionRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionRequest_Action.Descriptor instead.
func (ActionRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{4, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_shenzhen_go_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{0}
}

type NodePin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Pin  string `protobuf:"bytes,2,opt,name=pin,proto3" json:"pin,omitempty"`
}

func (x *NodePin) Reset() {
	*x = NodePin{}
	mi := &file_shenzhen_go_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePin) ProtoMessage() {}

func (x *NodePin) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePin.ProtoReflect.Descriptor instead.
func (*NodePin) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{1}
}

func (x *NodePin) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *NodePin) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

type ChannelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cap  uint64     `protobuf:"varint,2,opt,name=cap,proto3" json:"cap,omitempty"`
	Pins []*NodePin `protobuf:"bytes,3,rep,name=pins,proto3" json:"pins,omitempty"`
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	mi := &file_shenzhen_go_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelConfig) GetCap() uint64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *ChannelConfig) GetPins() []*NodePin {
	if x != nil {
		return x.Pins
	}
	return nil
}

type NodeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Comment      string  `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Enabled      bool    `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Multiplicity string  `protobuf:"bytes,4,opt,name=multiplicity,proto3" json:"multiplicity,omitempty"`
	Wait         bool    `protobuf:"varint,5,opt,name=wait,proto3" json:"wait,omitempty"`
	PartCfg      []byte  `protobuf:"bytes,6,opt,name=part_cfg,json=partCfg,proto3" json:"part_cfg,omitempty"`
	PartType     string  `protobuf:"bytes,7,opt,name=part_type,json=partType,proto3" json:"part_type,omitempty"`
	X            float64 `protobuf:"fixed64,8,opt,name=x,proto3" json:"x,omitempty"`
	Y            float64 `protobuf:"fixed64,9,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *NodeConfig) Reset() {
	*x = NodeConfig{}
	mi := &file_shenzhen_go_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfig) ProtoMessage() {}

func (x *NodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfig.ProtoReflect.Descriptor instead.
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{3}
}

func (x *NodeConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeConfig) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *NodeConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NodeConfig) GetMultiplicity() string {
	if x != nil {
		return x.Multiplicity
	}
	return ""
}

func (x *NodeConfig) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *NodeConfig) GetPartCfg() []byte {
	if x != nil {
		return x.PartCfg
	}
	return nil
}

func (x *NodeConfig) GetPartType() string {
	if x != nil {
		return x.PartType
	}
	return ""
}

func (x *NodeConfig) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *NodeConfig) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type ActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph  string               `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Action ActionRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=proto.ActionRequest_Action" json:"action,omitempty"`
}

func (x *ActionRequest) Reset() {
	*x = ActionRequest{}
	mi := &file_shenzhen_go_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRequest) ProtoMessage() {}

func (x *ActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRequest.ProtoReflect.Descriptor instead.
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{4}
}

func (x *ActionRequest) GetGraph() string {
	if x != nil {
		return x.Graph
	}
	return ""
}

func (x *ActionRequest) GetAction() ActionRequest_Action {
	if x != nil {
		return x.Action
	}
	return ActionRequest_SAVE
}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	mi := &file_shenzhen_go_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{5}
}

func (x *ActionResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph string `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	In    string `protobuf:"bytes,2,opt,name=in,proto3" json:"in,omitempty"` // stdin
}

func (x *Input) Reset() {
	*x = Input{}
	mi := &file_shenzhen_go_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{6}
}

func (x *Input) GetGraph() string {
	if x != nil {
		return x.Graph
	}
	return ""
}

func (x *Input) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Out string `protobuf:"bytes,1,opt,name=out,proto3" json:"out,omitempty"` // stdout
	Err string `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"` // stderr
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_shenzhen_go_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{7}
}

func (x *Output) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *Output) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type SetChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph   string         `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Channel string         `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Config  *ChannelConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetChannelRequest) Reset() {
	*x = SetChannelRequest{}
	mi := &file_shenzhen_go_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelRequest) ProtoMessage() {}

func (x *SetChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelRequest.ProtoReflect.Descriptor instead.
func (*SetChannelRequest) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{8}
}

func (x *SetChannelRequest) GetGraph() string {
	if x != nil {
		return x.Graph
	}
	return ""
}

func (x *SetChannelRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SetChannelRequest) GetConfig() *ChannelConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetGraphPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph       string `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PackagePath string `protobuf:"bytes,3,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	IsCommand   bool   `protobuf:"varint,4,opt,name=is_command,json=isCommand,proto3" json:"is_command,omitempty"`
}

func (x *SetGraphPropertiesRequest) Reset() {
	*x = SetGraphPropertiesRequest{}
	mi := &file_shenzhen_go_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetGraphPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGraphPropertiesRequest) ProtoMessage() {}

func (x *SetGraphPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGraphPropertiesRequest.ProtoReflect.Descriptor instead.
func (*SetGraphPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{9}
}

func (x *SetGraphPropertiesRequest) GetGraph() string {
	if x != nil {
		return x.Graph
	}
	return ""
}

func (x *SetGraphPropertiesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetGraphPropertiesRequest) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *SetGraphPropertiesRequest) GetIsCommand() bool {
	if x != nil {
		return x.IsCommand
	}
	return false
}

type SetNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph  string      `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Node   string      `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Config *NodeConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetNodeRequest) Reset() {
	*x = SetNodeRequest{}
	mi := &file_shenzhen_go_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodeRequest) ProtoMessage() {}

func (x *SetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodeRequest.ProtoReflect.Descriptor instead.
func (*SetNodeRequest) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{10}
}

func (x *SetNodeRequest) GetGraph() string {
	if x != nil {
		return x.Graph
	}
	return ""
}

func (x *SetNodeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SetNodeRequest) GetConfig() *NodeConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph string  `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Node  string  `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	X     float64 `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y     float64 `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *SetPositionRequest) Reset() {
	*x = SetPositionRequest{}
	mi := &file_shenzhen_go_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionRequest) ProtoMessage() {}

func (x *SetPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shenzhen_go_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionRequest.ProtoReflect.Descriptor instead.
func (*SetPositionRequest) Descriptor() ([]byte, []int) {
	return file_shenzhen_go_proto_rawDescGZIP(), []int{11}
}

func (x *SetPositionRequest) GetGraph() string {
	if x != nil {
		return x.Graph
	}
	return ""
}

func (x *SetPositionRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SetPositionRequest) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SetPositionRequest) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

var File_shenzhen_go_proto protoreflect.FileDescriptor

var file_shenzhen_go_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x68, 0x65, 0x6e, 0x7a, 0x68, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x6e, 0x22, 0x59, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x70,
	0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x69, 0x6e, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x73, 0x22,
	0xe0, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x66, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x43, 0x66, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x01, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x44, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x56,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x4c, 0x4c, 0x10, 0x04, 0x22, 0x28, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x2d, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x22, 0x2c,
	0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x71, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x87, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x65, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x5a, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x32, 0xdd, 0x02, 0x0a,
	0x0a, 0x53, 0x68, 0x65, 0x6e, 0x7a, 0x68, 0x65, 0x6e, 0x47, 0x6f, 0x12, 0x39, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x28, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14,
	0x73, 0x68, 0x65, 0x6e, 0x7a, 0x68, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shenzhen_go_proto_rawDescOnce sync.Once
	file_shenzhen_go_proto_rawDescData = file_shenzhen_go_proto_rawDesc
)

func file_shenzhen_go_proto_rawDescGZIP() []byte {
	file_shenzhen_go_proto_rawDescOnce.Do(func() {
		file_shenzhen_go_proto_rawDescData = protoimpl.X.CompressGZIP(file_shenzhen_go_proto_rawDescData)
	})
	return file_shenzhen_go_proto_rawDescData
}

var file_shenzhen_go_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shenzhen_go_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_shenzhen_go_proto_goTypes = []any{
	(ActionRequest_Action)(0),         // 0: proto.ActionRequest.Action
	(*Empty)(nil),                     // 1: proto.Empty
	(*NodePin)(nil),                   // 2: proto.NodePin
	(*ChannelConfig)(nil),             // 3: proto.ChannelConfig
	(*NodeConfig)(nil),                // 4: proto.NodeConfig
	(*ActionRequest)(nil),             // 5: proto.ActionRequest
	(*ActionResponse)(nil),            // 6: proto.ActionResponse
	(*Input)(nil),                     // 7: proto.Input
	(*Output)(nil),                    // 8: proto.Output
	(*SetChannelRequest)(nil),         // 9: proto.SetChannelRequest
	(*SetGraphPropertiesRequest)(nil), // 10: proto.SetGraphPropertiesRequest
	(*SetNodeRequest)(nil),            // 11: proto.SetNodeRequest
	(*SetPositionRequest)(nil),        // 12: proto.SetPositionRequest
}
var file_shenzhen_go_proto_depIdxs = []int32{
	2,  // 0: proto.ChannelConfig.pins:type_name -> proto.NodePin
	0,  // 1: proto.ActionRequest.action:type_name -> proto.ActionRequest.Action
	3,  // 2: proto.SetChannelRequest.config:type_name -> proto.ChannelConfig
	4,  // 3: proto.SetNodeRequest.config:type_name -> proto.NodeConfig
	5,  // 4: proto.ShenzhenGo.Action:input_type -> proto.ActionRequest
	7,  // 5: proto.ShenzhenGo.Run:input_type -> proto.Input
	9,  // 6: proto.ShenzhenGo.SetChannel:input_type -> proto.SetChannelRequest
	10, // 7: proto.ShenzhenGo.SetGraphProperties:input_type -> proto.SetGraphPropertiesRequest
	11, // 8: proto.ShenzhenGo.SetNode:input_type -> proto.SetNodeRequest
	12, // 9: proto.ShenzhenGo.SetPosition:input_type -> proto.SetPositionRequest
	6,  // 10: proto.ShenzhenGo.Action:output_type -> proto.ActionResponse
	8,  // 11: proto.ShenzhenGo.Run:output_type -> proto.Output
	1,  // 12: proto.ShenzhenGo.SetChannel:output_type -> proto.Empty
	1,  // 13: proto.ShenzhenGo.SetGraphProperties:output_type -> proto.Empty
	1,  // 14: proto.ShenzhenGo.SetNode:output_type -> proto.Empty
	1,  // 15: proto.ShenzhenGo.SetPosition:output_type -> proto.Empty
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_shenzhen_go_proto_init() }
func file_shenzhen_go_proto_init() {
	if File_shenzhen_go_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shenzhen_go_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shenzhen_go_proto_goTypes,
		DependencyIndexes: file_shenzhen_go_proto_depIdxs,
		EnumInfos:         file_shenzhen_go_proto_enumTypes,
		MessageInfos:      file_shenzhen_go_proto_msgTypes,
	}.Build()
	File_shenzhen_go_proto = out.File
	file_shenzhen_go_proto_rawDesc = nil
	file_shenzhen_go_proto_goTypes = nil
	file_shenzhen_go_proto_depIdxs = nil
}
